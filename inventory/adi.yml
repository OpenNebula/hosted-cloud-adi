all:
  vars:
    ansible_user: root
    ensure_keys_for: [root]

    ensure_hostname: true
    ensure_hosts: true

    unattend_disable: true
    update_pkg_cache: true
    features:
      evpn: false

    one_version: '7.0'
    # Contraseña GUI (usuario oneadmin)
    one_pass: 'oneadmin'

    db_backend: SQLite

    vn:
      # Red interna de VMs (sobre br3501) con IPAM y parámetros de red completos
      vxlan:
        managed: true
        template:
          VN_MAD: bridge
          BRIDGE: br3501
          GUEST_MTU: 1500

          # Rango de IPs que OpenNebula reservará y entregará por contextualización
          AR:
            TYPE: IP4
            IP: 10.101.101.50
            SIZE: 50

          # Parámetros de red para auto-configuración en la VM
          NETWORK_ADDRESS: 10.101.101.0
          NETWORK_MASK: 255.255.255.0
          GATEWAY: 10.101.101.12
          DNS: 9.9.9.9

    # =========================
    # Datastores OpenNebula
    # =========================
    ds:
      # IMAGES sobre LVM local del host (VG=onevg)
      images:
        managed: true
        template:
          NAME: images
          TYPE: IMAGE_DS
          DS_MAD: fs
          TM_MAD: fs_lvm
          DISK_TYPE: BLOCK
          VG_NAME: onevg
          SAFE_DIRS: "/var/tmp"
          RESTRICTED_DIRS: "/"

      # SYSTEM sobre LVM local del host (VG=onevg)
      system:
        managed: true
        template:
          NAME: system
          TYPE: SYSTEM_DS
          TM_MAD: fs_lvm
          DISK_TYPE: BLOCK
          VG_NAME: onevg
          SAFE_DIRS: "/var/tmp"
          RESTRICTED_DIRS: "/"

      # FILES en el frontend (kernels/initrd/context)
      files:
        managed: true
        template:
          NAME: files
          TYPE: FILE_DS
          DS_MAD: fs
          TM_MAD: ssh


frontend:
  hosts:
    opennebula-frontend:
      ansible_host: 10.100.193.38
      ansible_connection: local
      ansible_python_interpreter: /usr/bin/python3

node:
  hosts:
    opennebula-kvm:
      ansible_host: 10.100.193.39
